package com.intuit.apd.services.tests.documents;

import com.amazonaws.auth.AWSStaticCredentialsProvider;
import com.amazonaws.auth.BasicSessionCredentials;
import com.amazonaws.regions.Regions;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.AmazonS3ClientBuilder;
import com.amazonaws.services.s3.model.*;
import org.apache.commons.io.FileUtils;
import org.apache.commons.lang3.StringUtils;
import java.io.File;
import java.net.URL;

/**
 * Created by sshashidhar on 20/05/19.
 */
public class S3Operations {

    public static boolean uploadTestDocumentToFDP(String accessKey, String secretKey, String accessToken, String bucketName, String objectName){

        String region = Regions.US_WEST_2.getName();

        BasicSessionCredentials sessionCredentials = new BasicSessionCredentials(accessKey, secretKey, accessToken);

        AmazonS3 s3client = AmazonS3ClientBuilder.standard().withRegion(region).withCredentials(new AWSStaticCredentialsProvider(sessionCredentials)).build();

        try{
            // upload file to folder and set it to public
            s3client.putObject(new PutObjectRequest(bucketName, objectName,
                    new File("UnconvertedData.zip"))
                    .withCannedAcl(CannedAccessControlList.PublicRead));

            System.out.println("Completed upload of zip to S3 bucket.");

            return true;

        }catch (Exception e){
            System.out.println("Failed to upload zip to S3 bucket.");
            e.printStackTrace();
            return false;
        }

    }

    public static boolean downloadTestDocumentFromFDP(String accessKey, String secretKey, String accessToken, String bucketName, String objectName){

        String region = Regions.US_WEST_2.getName();

        BasicSessionCredentials sessionCredentials = new BasicSessionCredentials(accessKey, secretKey, accessToken);

        AmazonS3 s3client = AmazonS3ClientBuilder.standard().withRegion(region).withCredentials(new AWSStaticCredentialsProvider(sessionCredentials)).build();

        S3Object s3Object = s3client.getObject(bucketName, objectName);

        System.out.println("Generating pre-signed URL.");
        GeneratePresignedUrlRequest generatePresignedUrlRequest =
                new GeneratePresignedUrlRequest(bucketName, objectName);
        URL url = s3client.generatePresignedUrl(generatePresignedUrlRequest);

        System.out.println("Pre-Signed URL: " + url.toString());

        try{
            FileUtils.copyInputStreamToFile(s3Object.getObjectContent(), new File("ConvertedData.zip"));
        }catch (Exception e){
            e.printStackTrace();
        }

        System.out.println("Completed download of zip from S3 bucket.");

        return true;
    }

    public static boolean compareCheckSumCRCForBothFiles(){
        try{
            System.out.println(FileUtils.checksumCRC32(new File("ConvertedData.zip")));
            System.out.println(FileUtils.checksumCRC32(new File("UnconvertedData.zip")));
            return StringUtils.equals(Long.toString(FileUtils.checksumCRC32(new File("ConvertedData.zip"))), Long.toString(FileUtils.checksumCRC32(new File("UnconvertedData.zip"))));

        }catch(Exception e){
            e.printStackTrace();
            return false;
        }

    }

}
